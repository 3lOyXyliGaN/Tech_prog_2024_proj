// FuncForCl.h
/**
 * @file FuncForCl.h
 * @brief Заголовочный файл класса функциональности клиента
 */

#ifndef FUNCFORCL_H
#define FUNCFORCL_H

#include <QObject>
#include "Mainwindow.h"
#include "AuthandReg.h"
#include "Client.h"

/**
 * @brief Класс функциональности клиента
 *
 * Класс реализует логику работы клиента с авторизацией и регистрацией
 * @warning Класс управляет жизненным циклом ui_main и ui_auth,
 * не удаляйте эти объекты самостоятельно
 */
class FuncForCl : public QObject
{
    Q_OBJECT

private:
    Mainwindow* ui_main; ///< Указатель на главное окно
    AuthandReg* ui_auth; ///< Указатель на виджет авторизации и регистрации
    Client* client; ///< Указатель на экземпляр класса Client

public:
    /**
     * @brief Конструктор класса
     */
    FuncForCl();

public slots:
    /**
     * @brief Слот для отправки запроса авторизации
     * @param log Логин пользователя
     * @param pass Пароль пользователя
     */
    void sendAuth(QString log, QString pass);

    /**
     * @brief Слот для отправки запроса регистрации
     * @param log Логин пользователя
     * @param pass Пароль пользователя
     * @param email Email пользователя
     */
    void sendReg(QString log, QString pass, QString email);

    /**
     * @brief Слот для обработки сообщения от сервера
     * @param msg Сообщение от сервера
     * @warning При получении сообщения об успешной авторизации/регистрации
     * происходит автоматическое удаление окна авторизации
     */
    void msgHandler(QString msg);

    /*!
 * \brief Слот для решения задачи RSA.
 *
 * Этот слот принимает текст, который будет обработан для выполнения RSA шифрования.
 * \param text Текст, который необходимо зашифровать с использованием RSA.
 * \details Данная функция может использоваться для выполнения RSA шифрования
 * на основе переданного текста. Ожидается, что текст будет содержать
 * необходимые данные для шифрования, такие как открытый ключ и исходное сообщение.
 *
 * \note Убедитесь, что переданный текст корректен и соответствует требованиям
 * для RSA шифрования, иначе результат может быть некорректным.
 */
    void solvRSA(QString text);

    /*!
 * \brief Слот для решения задачи хеширования.
 *
 * Этот слот принимает текст, который будет обработан для вычисления его хеша.
 * \param text Текст, который необходимо хешировать.
 * \details Данная функция может использоваться для вычисления хеша
 * (например, SHA-512) на основе переданного текста. Ожидается, что текст
 * будет содержать данные, которые необходимо хешировать.
 *
 * \note Убедитесь, что переданный текст корректен и соответствует требованиям
 * для хеширования, иначе результат может быть некорректным.
 */
    void solvHash(QString text);
signals:
    /**
     * @brief Сигнал для отображения результата вычислений
     * @param text Текст для отображения
     */
    void solv(QString text);
};

#endif // FUNCFORCL_H
